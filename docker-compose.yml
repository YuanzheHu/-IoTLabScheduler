version: '3.8'

services:

  # FastAPI web application service
  web:
    build: ./project
    network_mode: host  # Use host network mode to access physical network
    command: sh -c "chmod -R 777 /usr/src/app/data && uvicorn main:app --host 0.0.0.0 --reload"  # Fix permissions then start FastAPI
    volumes:
      - ./project:/usr/src/app  # Mount project source code for live reload
      - ./project/data:/usr/src/app/data  # Mount data directory for persistent SQLite storage
    environment:
      - CELERY_BROKER_URL=redis://localhost:6379/0  # Celery broker URL for task queue (localhost in host mode)
      - CELERY_RESULT_BACKEND=redis://localhost:6379/0  # Celery result backend
    depends_on:
      - redis  # Ensure Redis is started before web
    extra_hosts:
      - "host.docker.internal:host-gateway"  # Allow access to host network
    user: "0:0"

  # Celery worker service for background task processing
  worker:
    build: ./project
    command: sh -c "chmod -R 777 /usr/src/app/data && celery -A worker.celery worker --loglevel=info --logfile=logs/celery.log"  # Fix permissions then start Celery worker
    volumes:
      - ./project:/usr/src/app  # Mount project source code
      - ./project/data:/usr/src/app/data  # Mount data directory for persistent SQLite storage
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0  # Celery broker URL
      - CELERY_RESULT_BACKEND=redis://redis:6379/0  # Celery result backend
      - TZ=Europe/London  # Set timezone for logs and tasks
    depends_on:
      - web    # Wait for web service to be ready
      - redis  # Wait for Redis to be ready
    cap_add:
      - NET_ADMIN
      - NET_RAW
    extra_hosts:
      - "host.docker.internal:host-gateway"  # Allow access to host network
    user: "0:0"

  # Flower dashboard for monitoring Celery tasks
  dashboard:
    build: ./project
    ports:
      - 5556:5555  # Expose Flower dashboard on host port 5556
    command: celery --broker=redis://redis:6379/0 flower --port=5555  # Start Flower on port 5555
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0  # Celery broker URL
      - CELERY_RESULT_BACKEND=redis://redis:6379/0  # Celery result backend
    depends_on:
      - web     # Wait for web service
      - redis   # Wait for Redis
      - worker  # Wait for worker
    extra_hosts:
      - "host.docker.internal:host-gateway"  # Allow access to host network

  # Redis service for Celery broker and backend
  redis:
    image: redis:7  # Use official Redis image
    ports:
      - 6379:6379  # Expose Redis on default port