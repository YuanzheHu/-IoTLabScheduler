version: '3.8'

# 定义通用配置
x-common-config: &common-config
  restart: unless-stopped
  network_mode: host
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"

services:
  # FastAPI web application service
  web:
    <<: *common-config
    build: 
      context: ./project
      dockerfile: Dockerfile
    environment:
      - SERVICE_TYPE=web
      - FASTAPI_HOST=0.0.0.0
      - FASTAPI_PORT=8000
      - FASTAPI_RELOAD=true
      - CELERY_BROKER_URL=redis://localhost:6379/0
      - CELERY_RESULT_BACKEND=redis://localhost:6379/0
      - LOG_LEVEL=INFO
      - LOG_DIR=/usr/src/app/logs
    volumes:
      - ./project:/usr/src/app
      - ./project/data:/usr/src/app/data
      - ./project/logs:/usr/src/app/logs
    depends_on:
      - redis
    cap_add:
      - NET_ADMIN
      - NET_RAW

  # Celery worker service
  worker:
    <<: *common-config
    build: 
      context: ./project
      dockerfile: Dockerfile
    environment:
      - SERVICE_TYPE=worker
      - CELERY_BROKER_URL=redis://localhost:6379/0
      - CELERY_RESULT_BACKEND=redis://localhost:6379/0
      - CELERY_CONCURRENCY=8  # 从4增加到8
      - LOG_LEVEL=INFO
      - LOG_DIR=/usr/src/app/logs
      - TZ=Europe/London
    volumes:
      - ./project:/usr/src/app
      - ./project/data:/usr/src/app/data
      - ./project/logs:/usr/src/app/logs
    depends_on:
      - web
      - redis
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - SYS_ADMIN
    security_opt:
      - seccomp:unconfined
    privileged: true

  # Flower dashboard
  flower:
    <<: *common-config
    build: 
      context: ./project
      dockerfile: Dockerfile
    environment:
      - SERVICE_TYPE=flower
      - CELERY_BROKER_URL=redis://localhost:6379/0
      - CELERY_RESULT_BACKEND=redis://localhost:6379/0
      - FLOWER_PORT=5555
      - LOG_LEVEL=INFO
      - LOG_DIR=/usr/src/app/logs
    volumes:
      - ./project/logs:/usr/src/app/logs
    depends_on:
      - web
      - redis
      - worker

  # Streamlit UI
  streamlit:
    <<: *common-config
    build: 
      context: ./dashboard
      dockerfile: Dockerfile
    volumes:
      - ./dashboard:/app
    depends_on:
      - web

  # Redis service
  redis:
    <<: *common-config
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data

volumes:
  redis-data: